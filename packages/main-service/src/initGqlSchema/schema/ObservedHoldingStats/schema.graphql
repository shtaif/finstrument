type Subscription {
  positions(filters: PositionsSubscriptionFilters): [ObservedPositionsUpdate!]!
}

input PositionsSubscriptionFilters {
  symbols: [ID!]
}

type ObservedPositionsUpdate {
  type: ObservedPositionsUpdateType!
  data: ObservedPosition!
}

enum ObservedPositionsUpdateType {
  SET
  REMOVE
}

type ObservedPosition {
  ownerId: ID!
  lastRelatedTradeId: ID!
  symbol: ID!
  lastChangedAt: DateTime!
  totalLotCount: Int!
  totalQuantity: Float!
  totalPresentInvestedAmount: Float!
  totalRealizedAmount: Float!
  totalRealizedProfitOrLossAmount: Float!
  totalRealizedProfitOrLossRate: Float!
  currentPortfolioPortion: Float
  breakEvenPrice: Float
  priceData: InstrumentMarketData!
  marketValue: Float!
  unrealizedPnl: PnlInfo!
}
